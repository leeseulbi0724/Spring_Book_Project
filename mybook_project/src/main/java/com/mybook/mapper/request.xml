<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="mapper.request">

	<insert id="request_write" parameterType="com.mybook.vo.RequestVO">
		insert into mybook_request values(#{id}, #{bname}, #{bauthor}, #{bpublish}, 'r_'||sequ_mybook_request.nextval, sysdate, 0)
	</insert>
	
	<select id="request_total" resultType="java.lang.Integer">
		select count(*) from mybook_request
	</select>
	
	<select id="request_list" parameterType="hashmap" resultType="com.mybook.vo.RequestVO">
	select rownum rno, rid, id, bname, bauthor, bpublish, to_char(rdate, 'yyyy-mm-dd') rdate, status
		from (select rownum rno, rid, id, bname, bauthor, bpublish, rdate, status
			from (select rid, id, bname, bauthor, bpublish, rdate, status from mybook_request order by rdate desc) order by rdate)
			where rno between (#{page}-1)*#{perPageNum}+1 and (#{page}*#{perPageNum}) order by rno desc
	</select>
	
	<select id="request_content" parameterType="java.lang.String" resultType="com.mybook.vo.RequestVO">
		select * from mybook_request where rid=#{rid}
	</select>
	
	<update id="request_status" parameterType="java.lang.String">
		update mybook_request set status=1 where rid=#{rid}
	</update>
	
	<!-- 관리자 ajax -->
	<select id="request_search_count" parameterType="map" resultType="com.mybook.vo.RequestVO">	
		select rno, rid, id, bname, bauthor, bpublish, to_char(rdate, 'yyyy-mm-dd') rdate, status
			from (select rownum rno, rid, id, bname, bauthor, bpublish, rdate, status
				from(select rownum rno, rid, id, bname, bauthor, bpublish, rdate, status
  					from(select rid, id, bname, bauthor, bpublish, rdate, status from mybook_request order by rdate desc) order by rdate) order by rno desc) where id like '%'||#{search}||'%'
	</select>
	
	<select id="request_search_list" parameterType="map" resultType="com.mybook.vo.RequestVO">	    			
  		select rno, rid, id, bname, bauthor, bpublish, to_char(rdate, 'yyyy-mm-dd') rdate, status
			from (select rno, rid, id, bname, bauthor, bpublish, rdate, status
				from (select rownum rno, rid, id, bname, bauthor, bpublish, rdate, status
					from(select rownum rno, rid, id, bname, bauthor, bpublish, rdate, status
  						from(select rid, id, bname, bauthor, bpublish, rdate, status from mybook_request order by rdate desc) order by rdate) order by rno desc) where id like '%'||#{search}||'%')
							where rno between (#{cri.page}-1)*#{cri.perPageNum}+1 and (#{cri.page}*#{cri.perPageNum}) 		
	</select>
	
	<insert id="request_bell" parameterType="com.mybook.vo.RequestVO">
		insert into mybook_bell values(#{id}, #{rid}, 1, sysdate, '희망도서')
	</insert>
	
	<select id="request_name" parameterType="java.lang.String" resultType="java.lang.String">
		select bid from mybook_book where bname=#{name}
	</select>

</mapper>