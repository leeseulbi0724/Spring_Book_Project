<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="mapper.member">

	<!-- 회원가입 -->
	<insert id="join" parameterType="com.mybook.vo.MemberVO">
		insert into mybook_member values(#{id},#{pass},#{name},#{birth},#{email},#{hp},#{addr1},#{addr2},sysdate, null, null)
	</insert>
	
	<!-- 로그인 -->
	<select id ="login" parameterType="com.mybook.vo.MemberVO"  resultType="java.lang.Integer">
		select count(*) from mybook_member where id=#{id} and pass=#{pass}
	</select>
	
	<!-- 휴대폰 -> 아이디찾기 -->
	<select id ="phone_id_search" parameterType="com.mybook.vo.MemberVO"  resultType="java.lang.String">
		select id from mybook_member where name=#{name} and birth=#{birth} and hp=#{hp}
	</select>
	
	<!-- 휴대폰 -> 비밀번호찾기 -->
	<select id ="phone_pass_search" parameterType="com.mybook.vo.MemberVO"  resultType="java.lang.String">
		select id from mybook_member where name=#{name} and birth=#{birth} and hp=#{hp} and id=#{id}
	</select>
	
	<!-- 이메일 -> 아이디찾기 -->
	<select id ="email_id_search" parameterType="com.mybook.vo.MemberVO"  resultType="java.lang.String">
		select id from mybook_member where name=#{name} and birth=#{birth} and email=#{email}
	</select>
	
	<!-- 이메일 -> 비밀번호찾기 -->
	<select id ="email_pass_search" parameterType="com.mybook.vo.MemberVO"  resultType="java.lang.String">
		select id from mybook_member where name=#{name} and birth=#{birth} and email=#{email} and id=#{id}
	</select>
	
	<!-- 비밀번호찾기 -> 변경 -->
	<update id ="pass_result" parameterType="com.mybook.vo.MemberVO" >
		update mybook_member set pass=#{pass} where id=#{id}
	</update>
	
	<!-- 아이디 중복체크 -->
	<select id ="id_check" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*) from mybook_member where id=#{id}
	</select>
	
	<!-- 현재 비밀번호 확인 -->
	<select id ="pass_check" parameterType="com.mybook.vo.SessionVO" resultType="java.lang.Integer">
		select count(*) from mybook_member where id=#{id} and pass=#{pass}
	</select>
	
	<!-- 현재 로그인 세션 정보 가져오기 -->
	<select id ="login_content" parameterType="java.lang.String" resultType="com.mybook.vo.MemberVO">
		select id, name, birth, email, hp, addr1, addr2, id_del, mfile, msfile from mybook_member where id=#{id}
	</select>
	
	<!-- 회원정보 수정하기 -->
	<update id ="info_update" parameterType="com.mybook.vo.MemberVO" >
		update mybook_member set email=#{email}, hp=#{hp}, addr1=#{addr1}, addr2=#{addr2} where id=#{id}
	</update>
	
	<!-- 회원탈퇴 신청 -->
	<update id ="info_delete" parameterType="java.lang.String" >
		update mybook_member set id_del=1 where id=#{id}
	</update>
	
	<!-- 회원탈퇴 신청 취소 -->
	<update id ="info_delete_reset" parameterType="java.lang.String" >
		update mybook_member set id_del=0 where id=#{id}
	</update>
	
	
	
	
	
	<!-- 관리자 - 회원리스트 -->
	<select id="member_list" parameterType="hashmap" resultType="com.mybook.vo.MemberVO">
		select rownum rno, id, name, birth, hp, email, mdate, id_del
			from (select rownum rno, id, name, birth, hp, email, mdate, id_del 
				from (select id, name, birth, hp, email, mdate, id_del from mybook_member order by mdate))
				where rno between (#{page}-1)*#{perPageNum}+1 and (#{page}*#{perPageNum})
	</select>
	
	<!-- 관리자 - 회원리스트갯수 -->
	<select id="count" resultType="java.lang.Integer">
		select count(*) from mybook_member
	</select>
	
	<!-- 관리자 - 회원탈퇴처리 -->
	<delete id="member_drop" parameterType="java.lang.String">
		delete from mybook_member where id=#{id}
	</delete>
	

</mapper>